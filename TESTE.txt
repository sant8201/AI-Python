
Uma das coisas emocionantes sobre um grande modelo de linguagem é que você pode usá-lo para criar um chatbot personalizado com apenas uma quantidade modesta de esforço. ChatGPT, a interface web, é uma forma de você ter uma conversa através de um grande modelo de linguagem. Mas uma das coisas legais é que você também pode usar um grande modelo de linguagem para criar seu próprio chatbot para desempenhar o papel de um agente de atendimento ao cliente com IA ou um tomador de pedidos com IA para um restaurante. E neste vídeo, você vai aprender a fazer isso sozinho. Eu vou descrever os componentes do formato de chat OpenAI para geração de texto em mais detalhes e depois você vai criar um chatbot você mesmo. Então vamos entrar nisso. Primeiro, vamos fazer a configuração usual. Então instale o pacote Python OpenAI como de costume. Depois, vamos definir duas funções auxiliares. Esta é a que temos usado em todos os vídeos e é a função “get_completion”. Mas se você olhar para ela, nós damos um prompt, mas dentro da função o que estamos realmente fazendo é colocar este prompt no que parece ser uma mensagem do usuário. E isso porque o modelo ChatGPT é um modelo de chat que significa que ele é treinado para receber uma série de mensagens como entrada e retornar uma mensagem gerada pelo modelo como saída. Então a mensagem do usuário é a entrada e a mensagem do assistente é a saída.

Então, neste vídeo, vamos usar uma função auxiliar diferente e em vez de dar um prompt único como entrada e obter uma única conclusão, vamos passar uma lista de mensagens e essas mensagens podem ter diferentes papéis. Então eu vou descrevê-los. Então aqui está um exemplo de uma lista de mensagens e a primeira mensagem é uma mensagem do sistema que dá uma instrução geral e depois dessa mensagem nós temos alternâncias entre o usuário e o assistente e isso vai continuar até o fim da conversa. Se você já usou ChatGPT, a interface web, então as suas mensagens são as mensagens do usuário e as mensagens do ChatGPT são as mensagens do assistente. A mensagem do sistema ajuda a definir o comportamento e a persona do assistente e ele age como uma espécie de instrução de alto nível para a conversa. Você pode pensar nela como um sussurro no ouvido do assistente para orientar suas respostas sem que o usuário esteja ciente da mensagem do sistema. Assim como o usuário, se você já usou ChatGPT, você provavelmente não sabe qual é a mensagem do sistema do ChatGPT. O benefício da mensagem do sistema é que ela fornece a você, o desenvolvedor, uma maneira de enquadrar a conversa sem fazer parte da conversa em si. Então você pode orientar o assistente e sussurrar no seu ouvido sem que o usuário perceba.

Então agora vamos tentar usar essas mensagens em uma conversa. Então vamos usar nossa nova função auxiliar para obter a conclusão das mensagens. E nós também vamos usar uma temperatura mais alta. A mensagem do sistema diz: “Você é um assistente que fala como Shakespeare”. Então isso é o que nós descrevemos para o assistente como ele deve se comportar. E então a primeira mensagem do usuário é: “Me conte uma piada”. A próxima é: “Por que a galinha atravessou a estrada?” E então a última mensagem do usuário é: “Não sei.” Então, se executarmos isso, a resposta é “Para chegar ao outro lado”. Vamos tentar novamente.

Uma possível revisão e correção do texto é:

REPITA O MESMO PROCESSO NA CONTINUAÇÃO DO TEXTO: “Para chegar ao outro lado, justo senhor ou senhora”. É uma velha e clássica piada que nunca falha. Então, aí está a nossa resposta shakespeariana. E vamos fazer mais uma coisa. Queremos deixar mais claro que esta é a mensagem do assistente. Então aqui, vamos apenas imprimir a mensagem inteira da resposta. Então, só para deixar isso mais claro. Esta resposta é uma mensagem do assistente. Então o papel é assistente e o conteúdo é a própria mensagem. Então é isso que está acontecendo nesta função auxiliar. Nós estamos apenas separando o conteúdo da mensagem. Então agora vamos fazer outro exemplo. Então aqui estão as nossas mensagens: a mensagem do sistema é “Você é um chatbot amigável” e a primeira mensagem do usuário é: “Olá, meu nome é Isa”. E queremos obter a primeira mensagem do assistente. Então vamos executar isto para obter a primeira mensagem do assistente. E a primeira mensagem é: “Olá Isa! É um prazer conhecê-lo. Como posso ajudá-lo hoje?” Agora vamos tentar outro exemplo. Então aqui as nossas mensagens são: a mensagem do sistema, “Você é um chatbot amigável” e a primeira mensagem do usuário é: “Você pode me lembrar qual é o meu nome?” E vamos ver a resposta. E como você pode ver, o modelo não sabe o meu nome. Então, cada conversa com um modelo de linguagem é uma interação autônoma, o que significa que você deve fornecer todas as mensagens relevantes para o modelo se basear na atual conversa. Se você quiser que o modelo se lembre ou cite partes anteriores de uma conversa, você deve fornecer as trocas anteriores na entrada para o modelo. E nós vamos chamar isso de contexto. Então vamos tentar isto. Então agora nós fornecemos o contexto que o modelo precisa, que é o meu nome, nas mensagens anteriores, e nós vamos fazer a mesma pergunta: qual é o meu nome? E o modelo é capaz de responder porque tem todo o contexto de que precisa nesta lista de mensagens que nós fornecemos para ele. Então agora você vai construir seu próprio chatbot. Esse chatbot vai se chamar “OrderBot”, e nós vamos automatizar a coleta de prompts do usuário e respostas do assistente para construir este “OrderBot”. E ele vai receber pedidos em uma pizzaria, então primeiro nós vamos definir esta função auxiliar e o que ela faz é que ela vai coletar nossas mensagens do usuário para que possamos evitar digitá-las à mão no mesmo formato que fizemos acima, e ela vai coletar os prompts de uma interface de usuário que vamos construir abaixo, e depois adicioná-los a uma lista chamada “contexto”, e depois ela vai chamar o modelo com esse contexto sempre. E a resposta do modelo é também adicionada ao contexto, então o modelo meio que se soma ao contexto, a mensagem do usuário é adicionada ao contexto, e assim por diante, então ele meio que cresce cada vez mais. Desta forma, o modelo tem as informações necessárias para determinar o que fazer em seguida. E agora vamos configurar e executar esta interface de usuário para exibir o OrderBot. E aqui está o contexto, e ele contém a mensagem do sistema que contém o menu. E note que todas as vezes que chamamos o modelo de linguagem, nós usamos o mesmo contexto, e o contexto está se construindo ao longo do tempo.


Uma possível revisão e correção do texto é:

REPITA UMA ÚLTIMA VEZ: “Para chegar ao outro lado, justo senhor ou senhora”. É uma velha e clássica piada que nunca falha. Então, aí está a nossa resposta shakespeariana. E vamos fazer mais uma coisa. Queremos deixar mais claro que esta é a mensagem do assistente. Então aqui, vamos apenas imprimir a mensagem inteira da resposta. Então, só para deixar isso mais claro. Esta resposta é uma mensagem do assistente. Então o papel é assistente e o conteúdo é a própria mensagem. Então é isso que está acontecendo nesta função auxiliar. Nós estamos apenas separando o conteúdo da mensagem. Então agora vamos fazer outro exemplo. Então aqui estão as nossas mensagens: a mensagem do sistema é “Você é um chatbot amigável” e a primeira mensagem do usuário é: “Olá, meu nome é Isa”. E queremos obter a primeira mensagem do assistente. Então vamos executar isto para obter a primeira mensagem do assistente. E a primeira mensagem é: “Olá Isa! É um prazer conhecê-lo. Como posso ajudá-lo hoje?” Agora vamos tentar outro exemplo. Então aqui as nossas mensagens são: a mensagem do sistema, “Você é um chatbot amigável” e a primeira mensagem do usuário é: “Você pode me lembrar qual é o meu nome?” E vamos ver a resposta. E como você pode ver, o modelo não sabe o meu nome. Então, cada conversa com um modelo de linguagem é uma interação autônoma, o que significa que você deve fornecer todas as mensagens relevantes para o modelo se basear na atual conversa. Se você quiser que o modelo se lembre ou cite partes anteriores de uma conversa, você deve fornecer as trocas anteriores na entrada para o modelo. E nós vamos chamar isso de contexto. Então vamos tentar isto. Então agora nós fornecemos o contexto que o modelo precisa, que é o meu nome, nas mensagens anteriores, e nós vamos fazer a mesma pergunta: qual é o meu nome? E o modelo é capaz de responder porque tem todo o contexto de que precisa nesta lista de mensagens que nós fornecemos para ele. Então agora você vai construir seu próprio chatbot. Esse chatbot vai se chamar “OrderBot”, e nós vamos automatizar a coleta de prompts do usuário e respostas do assistente para construir este “OrderBot”. E ele vai receber pedidos em uma pizzaria, então primeiro nós vamos definir esta função auxiliar e o que ela faz é que ela vai coletar nossas mensagens do usuário para que possamos evitar digitá-las à mão no mesmo formato que fizemos acima, e ela vai coletar os prompts de uma interface de usuário que vamos construir abaixo, e depois adicioná-los a uma lista chamada “contexto”, e depois ela vai chamar o modelo com esse contexto sempre. E a resposta do modelo é também adicionada ao contexto, então o modelo meio que se soma ao contexto, a mensagem do usuário é adicionada ao contexto, e assim por diante, então ele meio que cresce cada vez mais. Desta forma, o modelo tem as informações necessárias para determinar o que fazer em seguida. E agora vamos configurar e executar esta interface de usuário para exibir o OrderBot. E aqui está o contexto, e ele contém a mensagem do sistema que contém o menu. E note que todas as vezes que chamamos o modelo de linguagem, nós usamos o mesmo contexto, e o contexto está se construindo ao longo do tempo. E então vamos executar isso. Ok, eu vou dizer: “Oi, eu gostaria de pedir uma pizza”. E o assistente diz: “Ótimo, qual pizza você gostaria de pedir? Nós temos calabresa, queijo e pizza de berinjela.” Hmm. “Quanto elas custam?”, Ótimo, ok, nós temos os preços. Acho que estou com vontade de uma pizza média de berinjela. Como você pode imaginar, nós poderíamos continuar esta conversa. E vamos olhar para o que colocamos na mensagem do sistema. Então, “Você é OrderBot, um serviço automatizado para coletar pedidos de um restaurante de pizza. Você primeiro cumprimenta o cliente, depois coleta o pedido, e depois pergunta se é para retirada ou entrega. Você espera coletar todo o pedido, depois resume e verifica uma última vez se o cliente quer adicionar alguma coisa. Se for uma entrega, você deve perguntar o endereço. Finalmente, você coleta o pagamento. Certifique-se de esclarecer todas as opções, extras e tamanhos para identificar unicamente o item do menu. Você responde de forma curta, em um estilo muito conversacional e amigável. O menu inclui.”, e depois aqui temos o menu. Então, vamos voltar à nossa conversa, e vamos ver se o assistente seguiu as instruções. Ok, ótimo, o assistente pergunta se queremos alguma cobertura, que nós especificamos na mensagem do sistema. Então acho que não queremos coberturas extras. Certo. “Tem mais alguma coisa que você gostaria de pedir?” Vamos pegar um pouco de água. Na verdade, batatas fritas. Pequena ou grande? Isso é ótimo porque nós pedimos ao assistente na mensagem do sistema para esclarecer extras e acompanhamentos. E assim, você tem a ideia, e por favor, sinta-se livre para brincar com isso você mesmo. Você pode pausar o vídeo e simplesmente ir em frente e executar isso no seu próprio notebook à esquerda. E assim, agora podemos pedir ao modelo para criar um resumo JSON do pedido anterior. Detalhe o preço para cada item. Os campos devem ser 1) pizza, incluir tamanho, 2) lista de coberturas, 3) lista de bebidas, e 4) lista de acompanhamentos", e por fim, o preço total. Você também pode usar um mensagem do usuário aqui. Isso não precisa ser uma mensagem do sistema.

Então, vamos executar isso. E note que neste caso, estamos usando uma temperatura mais baixa porque para este tipo de tarefa, nós queremos que a saída seja bastante previsível. Durante um chatbot de conversação, você pode querer usar uma temperatura mais alta. No entanto, neste caso, eu talvez usaria uma temperatura mais baixa também porque para um chatbot de atendimento ao cliente você pode querer que a saída seja um pouco mais previsível também. E assim, aqui temos o resumo do nosso pedido. E assim, poderíamos enviar isso para o sistema de pedidos, se quiséssemos. Então aí está, você construiu seu próprio chatbot de pedidos. Sinta-se livre para personalizá-lo você mesmo e brincar com a mensagem do sistema para mudar o comportamento do chatbot e fazê-lo agir como diferentes personas com diferentes 